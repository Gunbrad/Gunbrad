---
import { Icon } from "astro-icon/components";
import { siteConfig } from "../config";

const title = Astro.props.title || "";
const url = Astro.props.url || Astro.url.href;
const className = Astro.props.class || "";

// 确保URL是完整的、有效的URL（包含协议）
let fullUrl = url;
if (!url.startsWith('http')) {
  fullUrl = 'https://' + (new URL(Astro.url.pathname, Astro.site)).host + url;
}

// 传递原始URL，在客户端JavaScript中进行解码
---

<div class:list={["share-buttons", className]}>
  <div class="share-title">
    <Icon name="material-symbols:share" class="share-title-icon" />
    <span>分享这篇文章</span>
  </div>
  
  <div class="share-btns-container">
    <!-- 微信分享按钮 - 复制链接 -->
    <button 
      id="wechat-share-btn" 
      class="share-btn wechat-btn" 
      aria-label="复制链接分享到微信"
      data-url={fullUrl}
      data-title={title}
    >
      <Icon name="fa6-brands:weixin" class="share-icon" />
      <span>微信分享</span>
    </button>
    
    <!-- QQ分享按钮 -->
    <button 
      id="qq-share-btn" 
      class="share-btn qq-btn" 
      aria-label="复制链接分享到QQ"
      data-url={fullUrl}
      data-title={title}
    >
      <Icon name="fa6-brands:qq" class="share-icon" />
      <span>QQ分享</span>
    </button>
  </div>
</div>



<style>
  .share-buttons {
    margin: 2rem 0;
    padding: 1.5rem;
    border-radius: var(--radius-large, 12px);
    background-color: var(--bg-card, #f8f9fa);
    border: 1px solid var(--line-divider, #e9ecef);
    transition: all 0.3s ease;
  }
  
  .share-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
    font-weight: 600;
    color: var(--text-primary, #333);
    font-size: 1rem;
  }
  
  .share-title-icon {
    width: 1.25rem;
    height: 1.25rem;
    color: var(--primary, #3b82f6);
  }
  
  .share-btns-container {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }
  
  .share-btn {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.25rem;
    border-radius: var(--radius-medium, 8px);
    text-decoration: none;
    border: 1px solid var(--line-divider, #ddd);
    background-color: var(--bg-body, white);
    color: var(--text-secondary, #666);
    transition: all 0.2s ease;
    cursor: pointer;
    font-size: 0.875rem;
    font-weight: 500;
    min-width: 120px;
    justify-content: center;
  }
  
  .share-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }
  
  .share-icon {
    width: 1.25rem;
    height: 1.25rem;
  }
  
  .wechat-btn:hover {
    background-color: #07c160;
    color: white;
    border-color: #07c160;
  }
  
  .qq-btn:hover {
    background-color: #12b7f5;
    color: white;
    border-color: #12b7f5;
  }
  
  
  /* 成功状态样式 - 微信绿色 */
  .share-btn.success.wechat-btn {
    background-color: #10b981 !important;
    color: white !important;
    border-color: #10b981 !important;
    transform: scale(0.98);
  }
  
  /* 成功状态样式 - QQ蓝色 */
  .share-btn.success.qq-btn {
    background-color: #12b7f5 !important;
    color: white !important;
    border-color: #12b7f5 !important;
    transform: scale(0.98);
  }
  
  .share-btn.success .share-icon {
    color: white !important;
  }
  
  :global(.dark) .share-btn.success.wechat-btn {
    background-color: #059669 !important;
    border-color: #059669 !important;
  }
  
  :global(.dark) .share-btn.success.qq-btn {
    background-color: #0ea5e9 !important;
    border-color: #0ea5e9 !important;
  }
  
  /* 响应式设计 */
  @media (max-width: 640px) {
    .share-buttons {
      margin: 1.5rem 0;
      padding: 1rem;
    }
    
    .share-btns-container {
      flex-direction: column;
    }
    
    .share-btn {
      width: 100%;
      min-width: auto;
    }
  }
  
  /* 暗色模式适配 */
  :global(.dark) .share-buttons {
    background-color: rgba(31, 41, 55, 0.8);
    border-color: rgba(55, 65, 81, 0.6);
    color: #f9fafb;
  }
  
  :global(.dark) .share-title {
    color: #f9fafb;
  }
  
  :global(.dark) .share-btn {
    background-color: rgba(17, 24, 39, 0.8);
    color: #d1d5db;
    border-color: rgba(55, 65, 81, 0.6);
  }
  
  :global(.dark) .share-btn:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }
  
  :global(.dark) .wechat-btn:hover {
    background-color: #059669;
    color: white;
    border-color: #059669;
  }
  
  :global(.dark) .qq-btn:hover {
    background-color: #0ea5e9;
    color: white;
    border-color: #0ea5e9;
  }
</style>

<script>
  // 分享功能的工具函数
  window.ShareUtils = window.ShareUtils || {
    // 显示按钮成功状态
    showButtonSuccess: function(button, originalText, successText) {
      if (!button) return;
      
      const textSpan = button.querySelector('span');
      if (textSpan) {
        // 清除之前的恢复定时器
        if (button._restoreTimer) {
          clearTimeout(button._restoreTimer);
        }
        
        // 添加成功样式
        button.classList.add('success');
        // 更改文本
        textSpan.textContent = successText;
        
        // 2秒后恢复原状
        button._restoreTimer = setTimeout(() => {
          button.classList.remove('success');
          textSpan.textContent = originalText;
          button._restoreTimer = null;
        }, 2000);
      }
    },
    
    // 解码URL中的中文字符，让链接更美观
    decodeUrlPath: function(url) {
      try {
        console.log('Original URL:', url);
        
        // 多次解码，处理可能的多层编码
        let decodedUrl = url;
        let previousUrl = '';
        let attempts = 0;
        
        // 最多尝试3次解码，防止无限循环
        while (decodedUrl !== previousUrl && attempts < 3) {
          previousUrl = decodedUrl;
          try {
            decodedUrl = decodeURIComponent(decodedUrl);
            attempts++;
          } catch (e) {
            break;
          }
        }
        
        console.log('Decoded URL after', attempts, 'attempts:', decodedUrl);
        return decodedUrl;
      } catch (error) {
        console.log('URL decode failed:', error);
        return url;
      }
    },
    
    // 创建友好的分享文本 - 只返回解码后的URL
    createShareText: function(title, url) {
      return this.decodeUrlPath(url);
    },
    
    // 复制文本到剪贴板
    copyToClipboard: async function(text) {
      try {
        if (navigator.clipboard && window.isSecureContext) {
          await navigator.clipboard.writeText(text);
          return true;
        } else {
          // 降级方案：使用传统方法
          const textArea = document.createElement('textarea');
          textArea.value = text;
          textArea.style.position = 'fixed';
          textArea.style.left = '-999999px';
          textArea.style.top = '-999999px';
          document.body.appendChild(textArea);
          textArea.focus();
          textArea.select();
          
          const result = document.execCommand('copy');
          document.body.removeChild(textArea);
          return result;
        }
      } catch (error) {
        console.error('复制失败:', error);
        return false;
      }
    }
  };
  
  // 初始化分享按钮功能
  function initShareButtons() {
    console.log('Initializing share buttons...');
    
    // 获取按钮元素
    const wechatBtn = document.getElementById('wechat-share-btn');
    const qqBtn = document.getElementById('qq-share-btn');
    
    console.log('Share buttons found:', { wechatBtn: !!wechatBtn, qqBtn: !!qqBtn });
    
    // 检查是否已经初始化过，避免重复绑定
    if (wechatBtn && wechatBtn._shareInitialized) {
      console.log('Share buttons already initialized, skipping...');
      return;
    }
    
    // 微信分享按钮点击事件
    if (wechatBtn) {
      wechatBtn.addEventListener('click', async function() {
        const url = this.getAttribute('data-url');
        const title = this.getAttribute('data-title');
        
        if (url) {
          const shareText = window.ShareUtils.createShareText(title, url);
          const success = await window.ShareUtils.copyToClipboard(shareText);
          if (success) {
            window.ShareUtils.showButtonSuccess(this, '微信分享', '✓ 已复制！去微信粘贴吧');
          } else {
            alert('复制失败，请手动复制内容：\n' + shareText);
          }
        }
      });
    }
    
    // QQ分享按钮点击事件
    if (qqBtn) {
      qqBtn.addEventListener('click', async function() {
        const url = this.getAttribute('data-url');
        const title = this.getAttribute('data-title');
        
        if (url) {
          const shareText = window.ShareUtils.createShareText(title, url);
          const success = await window.ShareUtils.copyToClipboard(shareText);
          if (success) {
            window.ShareUtils.showButtonSuccess(this, 'QQ分享', '✓ 已复制！去QQ粘贴吧');
          } else {
            alert('复制失败，请手动复制内容：\n' + shareText);
          }
        }
      });
    }
    
    // 键盘快捷键支持 (Ctrl+Shift+W 微信分享, Ctrl+Shift+Q QQ分享)
    const keydownHandler = function(event) {
      if (event.ctrlKey && event.shiftKey) {
        if (event.key === 'W' && wechatBtn) {
          event.preventDefault();
          wechatBtn.click();
        } else if (event.key === 'Q' && qqBtn) {
          event.preventDefault();
          qqBtn.click();
        }
      }
    };
    
    // 移除之前的键盘事件监听器
    document.removeEventListener('keydown', window.shareKeydownHandler);
    // 添加新的键盘事件监听器
    window.shareKeydownHandler = keydownHandler;
    document.addEventListener('keydown', keydownHandler);
    
    // 标记已初始化
    if (wechatBtn) wechatBtn._shareInitialized = true;
    if (qqBtn) qqBtn._shareInitialized = true;
    
    console.log('Share buttons initialization completed');
  }
  
  // 页面加载完成时初始化
  document.addEventListener('DOMContentLoaded', initShareButtons);
  
  // 暴露初始化函数到全局，以便其他脚本调用
  window.initShareButtons = initShareButtons;
  
  // 定期检查并重新初始化（处理动态加载的内容）
  let checkInterval;
  function startShareButtonsWatcher() {
    clearInterval(checkInterval);
    checkInterval = setInterval(() => {
      const wechatBtn = document.getElementById('wechat-share-btn');
      const qqBtn = document.getElementById('qq-share-btn');
      
      // 如果找到按钮但没有绑定事件，重新初始化
      if ((wechatBtn || qqBtn) && !wechatBtn?._shareInitialized) {
        console.log('Re-initializing share buttons due to DOM changes');
        initShareButtons();
      }
    }, 1000);
  }
  
  // 启动监视器
  startShareButtonsWatcher();
  
  // 监听可能的页面变化事件
  if (typeof window.swup !== 'undefined') {
    // 如果使用了 Swup
    window.swup.on('contentReplaced', initShareButtons);
  }
  
  // 监听 history 变化
  let lastUrl = location.href;
  new MutationObserver(() => {
    const url = location.href;
    if (url !== lastUrl) {
      lastUrl = url;
      // 清除旧的初始化标记
      const oldWechatBtn = document.getElementById('wechat-share-btn');
      const oldQqBtn = document.getElementById('qq-share-btn');
      if (oldWechatBtn) oldWechatBtn._shareInitialized = false;
      if (oldQqBtn) oldQqBtn._shareInitialized = false;
      
      setTimeout(initShareButtons, 100); // 稍微延迟确保内容加载完成
    }
  }).observe(document, { subtree: true, childList: true });
</script> 